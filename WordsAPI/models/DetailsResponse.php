<?php
/**
 *  Copyright 2011 Wordnik, Inc.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/**
 * $model.description$
 *
 * NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
 *
 */

/**
 * source code generated by http://restunited.com using Swagger Codegen
 * for any feedback/issue, please send to feedback{at}restunited.com
 *
 * swagger-codegen: https://github.com/wordnik/swagger-codegen
 */

/**
 * APIClient.php
 */

namespace WordsAPI\models;

class DetailsResponse {

  static $swaggerTypes = array(
      'also' => 'array[string]',
      'antonyms' => 'array[string]',
      'definitions' => 'array[Definition]',
      'entails' => 'array[string]',
      'hasCategories' => 'array[string]',
      'hasInstances' => 'array[string]',
      'hasMembers' => 'array[string]',
      'hasParts' => 'array[string]',
      'hasSubstances' => 'array[string]',
      'hasTypes' => 'array[string]',
      'hasUsages' => 'array[string]',
      'inCategory' => 'array[string]',
      'inRegion' => 'array[string]',
      'instance_of' => 'array[string]',
      'memberOf' => 'array[string]',
      'partOf' => 'array[string]',
      'pertainsTo' => 'array[string]',
      'regionOf' => 'array[string]',
      'similarTo' => 'array[string]',
      'substanceOf' => 'array[string]',
      'synonyms' => 'array[string]',
      'typeOf' => 'array[string]',
      'usageOf' => 'array[string]'

    );

  /**
  * Phrases to which the original word belongs.
  */
  public $also; // array[string]
  /**
  * Words that have the opposite context of the original word.
  */
  public $antonyms; // array[string]
  /**
  * The meaning of the word, including it's part of speech.
  */
  public $definitions; // array[Definition]
  /**
  * Words that are implied by the original word. Usually used for verbs.
  */
  public $entails; // array[string]
  /**
  * Categories of the original word.
  */
  public $hasCategories; // array[string]
  /**
  * Words that are examples of the original word.
  */
  public $hasInstances; // array[string]
  /**
  * Words that belong to the group defined by the original word.
  */
  public $hasMembers; // array[string]
  /**
  * Words that are part of the original word. Also known as meronyms.
  */
  public $hasParts; // array[string]
  /**
  * Substances that are part of the original word.
  */
  public $hasSubstances; // array[string]
  /**
  * Words that are more specific than the original word. Also known as hyponyms.
  */
  public $hasTypes; // array[string]
  /**
  * Words that are examples of the domain the original word defines.
  */
  public $hasUsages; // array[string]
  /**
  * The domain category to which the original word belongs.
  */
  public $inCategory; // array[string]
  /**
  * Regions where the word is used.
  */
  public $inRegion; // array[string]
  /**
  * Words that the original word is an example of.
  */
  public $instance_of; // array[string]
  /**
  * A group to which the original word belongs.
  */
  public $memberOf; // array[string]
  /**
  * Partof
  */
  public $partOf; // array[string]
  /**
  * Words to which the original word is relevant
  */
  public $pertainsTo; // array[string]
  /**
  * A region where words are used.
  */
  public $regionOf; // array[string]
  /**
  * Words that similar to the original word, but are not synonyms.
  */
  public $similarTo; // array[string]
  /**
  * Substances to which the original word is a part of.
  */
  public $substanceOf; // array[string]
  /**
  * Words that can be interchanged for the original word in the same context.
  */
  public $synonyms; // array[string]
  /**
  * Words that are more generic than the original word. Also known as hypernyms.
  */
  public $typeOf; // array[string]
  /**
  * Words that the original word is a domain usage of.
  */
  public $usageOf; // array[string]
  }

